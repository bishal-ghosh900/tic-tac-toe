{"version":3,"sources":["components/Utility.js","components/TicTacToe.js","components/WrapperTicTacToe.js","App.js","index.js"],"names":["Utility","className","onClick","props","handlePrev","rel","handleReset","prevClicked","handleNext","Component","TicTacToe","upperBoxState","state","boxState","i","length","pop","setState","winComplete","draw","playerA","playerB","circleOrCross","index","handleClick","e","attr","target","getAttribute","obj","find","v","box","circle","cross","clicked","innerText","push","result","count","winCompleteArr","drawArr","playerAArr","playerBArr","circleOrCrossArr","this","map","name","bind","WrapperTicTacToe","App","ReactDOM","render","document","getElementById"],"mappings":"sQAEaA,EAAb,4JACE,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,OAAf,UACE,wBACEA,UAAU,MACVC,QAAS,kBAAM,EAAKC,MAAMC,cAC1BC,IAAI,sBAHN,SAKE,mBAAGJ,UAAU,mCAEf,wBACEC,QAAS,kBAAM,EAAKC,MAAMG,eAC1BL,UAAU,MACVI,IAAI,sBAHN,SAKE,mBAAGJ,UAAU,kBAEf,wBACEC,QAAS,kBAAM,EAAKC,MAAMI,YAAc,EAAKJ,MAAMK,aAAe,IAClEP,UAAU,MACVI,IAAI,sBAHN,SAKE,mBAAGJ,UAAU,2CAvBvB,GAA6BQ,aA8BdT,IC+YAU,EA5af,kDACE,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IA+ERG,YAAc,WAGZ,IAFA,IAAMK,EAAa,YAAO,EAAKC,MAAMC,UAE7BC,EAAIH,EAAcI,OAAS,EAAGD,GAAK,EAAGA,IAC1CH,EAAcK,MAGlB,EAAKC,SAAS,CACVJ,SAAWF,EACXO,YAAa,EAAC,GACdC,KAAM,EAAC,GACPC,QAAS,EAAC,GACVC,QAAS,EAAC,GACVC,cAAe,EAAC,GAChBC,MAAO,EACPhB,aAAa,KA/FA,EAqGnBH,WAAa,WACX,IAAKmB,EAAS,EAAKX,MAAdW,MACFA,EAAQ,GACP,EAAKN,SAAS,CACVM,QAASA,EACThB,aAAa,KA1GJ,EAgHnBC,WAAa,WACX,MAAwB,EAAKI,MAAxBW,EAAL,EAAKA,MACFA,EAAQ,EADX,EAAYV,SACYE,SACpBQ,GAAS,GAEb,EAAKN,SAAS,CAAEM,WArHC,EAyHnBC,YAAc,SAACC,GACb,IAAKF,EAAS,EAAKX,MAAdW,MACL,IAAI,EAAKX,MAAMM,YAAYK,GAA3B,CACA,IAAIG,EAAOD,EAAEE,OAAOC,aAAa,QAC3BjB,EAAa,YAAO,EAAKC,MAAMC,UAC/BA,EAAQ,YAAOF,EAAcY,IAC7BM,EAAG,eAAQhB,EAASiB,MAAK,SAACC,GAAD,OAAOA,EAAEC,MAAQN,MAEhD,IAAIG,EAAII,SAAUJ,EAAIK,MAAtB,CAGEL,EAAIM,SAAU,EAEZ,EAAKvB,MAAMU,cAAcC,IAC3BM,EAAII,QAAS,EACbJ,EAAIO,UAAY,MAEhBP,EAAIK,OAAQ,EACZL,EAAIO,UAAY,KAElB,IAAK,IAAItB,EAAI,EAAGA,EAAID,EAASE,OAAQD,IACnC,GAAID,EAASC,GAAGkB,MAAQN,EAAM,CAC5Bb,EAASC,GAAT,eAAmBe,GACnB,MAGJ,GAAGlB,EAAcI,OAAS,EAAKQ,EAAQ,EACnCZ,EAAc0B,KAAKxB,QAInB,IADAF,EAAcY,EAAQ,GAAKV,EACrBF,EAAcI,OAAS,EAAKQ,EAAQ,GACtCZ,EAAcK,MAKtB,IADA,IAAIsB,EAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrCxB,EAAI,EAAGA,EAAID,EAASE,OAAQD,IAC/BD,EAASC,GAAGmB,OACdK,EAAOxB,GAAK,SACHD,EAASC,GAAGoB,QACrBI,EAAOxB,GAAK,SAIhB,IAAII,GAAc,EACdE,GAAU,EACVC,GAAU,EACVF,GAAO,EACPG,EAAgB,EAAKV,MAAMU,cAAcC,GACzCgB,EAAQ,EAsIZ,GAnIgB,UAAdD,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAKI,UAAdkB,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAGI,UAAdkB,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAGI,UAAdkB,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAGI,UAAdkB,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAGI,UAAdkB,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAGI,UAAdkB,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAGI,UAAdkB,EAAO,IACO,UAAdA,EAAO,IACO,UAAdA,EAAO,KAEPpB,GAAc,EACdE,GAAU,GAII,WAAdkB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,GAGI,WAAdiB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,GAGI,WAAdiB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,GAGI,WAAdiB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,GAGI,WAAdiB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,GAGI,WAAdiB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,GAGM,WAAdiB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,GAGI,WAAdiB,EAAO,IACO,WAAdA,EAAO,IACO,WAAdA,EAAO,KAEPpB,GAAc,EACdG,GAAU,IAGTH,EAAa,CAAC,IAAD,gBACFoB,GADE,IAChB,2BAAsB,UAElBC,KAHY,+BAOdA,IAAUD,EAAOvB,QAAWG,IAC9BC,GAAO,GAGT,IAAIqB,EAAc,YAAO,EAAK5B,MAAMM,aAChCuB,EAAO,YAAO,EAAK7B,MAAMO,MACzBuB,EAAU,YAAO,EAAK9B,MAAMQ,SAC5BuB,EAAU,YAAO,EAAK/B,MAAMS,SAC5BuB,EAAgB,YAAO,EAAKhC,MAAMU,eAGtC,GAFAC,GAAS,EAENiB,EAAezB,OAAS,EAAIQ,EAC3BiB,EAAeH,KAAKnB,QAGpB,IADAsB,EAAejB,GAASL,EAClBsB,EAAezB,OAAS,EAAKQ,GAC/BiB,EAAexB,MAIvB,GAAGyB,EAAQ1B,OAAS,EAAIQ,EACpBkB,EAAQJ,KAAKlB,QAGb,IADAsB,EAAQlB,GAASJ,EACXsB,EAAQ1B,OAAS,EAAKQ,GACxBkB,EAAQzB,MAIhB,GAAG0B,EAAW3B,OAAS,EAAIQ,EACvBmB,EAAWL,KAAKjB,QAGhB,IADAsB,EAAWnB,GAASH,EACdsB,EAAW3B,OAAS,EAAKQ,GAC3BmB,EAAW1B,MAInB,GAAG2B,EAAW5B,OAAS,EAAIQ,EACvBoB,EAAWN,KAAKhB,QAGhB,IADAsB,EAAWpB,GAASF,EACdsB,EAAW5B,OAAS,EAAKQ,GAC3BoB,EAAW3B,MAInB,GAAG4B,EAAiB7B,OAAS,EAAIQ,EAC7BqB,EAAiBP,MAAMf,QAGvB,IADAsB,EAAiBrB,IAAUD,EACrBsB,EAAiB7B,OAAS,EAAKQ,GACjCqB,EAAiB5B,MAIzB,EAAKC,SAAS,CACZC,YAAcsB,EACdrB,KAAMsB,EACNrB,QAAUsB,EACVrB,QAASsB,EACT9B,SAAUF,EACVW,cAAesB,EACfrB,MAAOA,EACPhB,aAAa,OAtXf,EAAKK,MAAQ,CACXM,YAAa,EAAC,GACdC,KAAM,EAAC,GACPC,QAAS,EAAC,GACVC,QAAS,EAAC,GACVC,cAAe,EAAC,GAChBf,aAAa,EACbgB,MAAO,EACPV,SAAU,CACR,CACE,CACEmB,IAAK,MACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,MACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,QACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,OACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,OACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,MACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,QACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,QACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,IAEb,CACEJ,IAAK,OACLC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,UAAW,OAzEF,EADrB,0CA4XE,WAAU,IAAD,OACAb,EAASsB,KAAKjC,MAAdW,MACP,EAKIsB,KAAKjC,MAJLO,EADJ,EACIA,KACAC,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,QACAC,EAJJ,EAIIA,cAEJ,OACE,sBAAKrB,UAAU,UAAf,UACE,6CACA,qBAAKA,UAAU,UAAf,SACIkB,EAAKI,GAaL,qCAZCH,EAAQG,IAAWF,EAAQE,GAMxBH,EAAQG,KAAWF,EAAQE,GAC7B,6CAEA,6CARA,qCACE,2CACCD,EAAcC,GAAU,kCAAa,kCACtC,gDAWR,cAAC,EAAD,CAAShB,YAAasC,KAAKjC,MAAML,YAAaD,YAAauC,KAAKvC,YAAaF,WAAYyC,KAAKzC,WAAYI,WAAYqC,KAAKrC,aAC3H,qBAAKP,UAAU,YAAf,SACG4C,KAAKjC,MAAMC,SAASU,GAAOuB,KAAI,SAACrB,GAC/B,OACE,qBAEEsB,KAAMtB,EAAEO,IACR9B,QAAS,EAAKsB,YAAYwB,KAAK,GAC/B/C,UAAS,cAASwB,EAAEO,KAJtB,SAMGP,EAAEW,WALEX,EAAEO,iBA7ZvB,GAA+BvB,aCClBwC,EAAb,4JACI,WACI,OACI,cAAC,WAAD,UACG,cAAC,EAAD,UAJf,GAAsCxC,aAUvBwC,ICLAC,MANf,WACE,OACE,cAAC,EAAD,KCAJC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3d4185db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Utility extends Component {\n  render() {\n    return (\n      <div className=\"util\">\n        <button\n          className=\"btn\"\n          onClick={() => this.props.handlePrev()}\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fas fa-arrow-alt-circle-left\"></i>\n        </button>\n        <button\n          onClick={() => this.props.handleReset()}\n          className=\"btn\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fas fa-redo\"></i>\n        </button>\n        <button\n          onClick={() => this.props.prevClicked ? this.props.handleNext() : \"\"}\n          className=\"btn\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fas fa-arrow-alt-circle-right\"></i>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Utility;\n","import React, { Component } from \"react\";\nimport Utility from \"./Utility\";\n\nexport class TicTacToe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winComplete: [false],\n      draw: [false],\n      playerA: [false],\n      playerB: [false],\n      circleOrCross: [false],\n      prevClicked: false,\n      index: 0,\n      boxState: [\n        [\n          {\n            box: \"one\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"two\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"three\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"four\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"five\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"six\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"seven\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"eight\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n          {\n            box: \"nine\",\n            circle: false,\n            cross: false,\n            clicked: false,\n            innerText: \"\",\n          },\n        ],\n      ],\n    };\n  }\n\n  handleReset = () => {\n    const upperBoxState = [...this.state.boxState];\n\n    for(let i = upperBoxState.length - 1; i >= 1; i--){\n        upperBoxState.pop();\n    }\n\n    this.setState({\n        boxState : upperBoxState,\n        winComplete: [false],\n        draw: [false],\n        playerA: [false],\n        playerB: [false],\n        circleOrCross: [false],\n        index: 0,\n        prevClicked: false\n\n    })\n\n  }\n\n  handlePrev = () => {\n    let {index} = this.state; \n    if(index > 0){\n        this.setState({\n            index: --index,\n            prevClicked: true,\n        })\n    }\n\n  }\n\n  handleNext = () => {\n    let {index, boxState} = this.state; \n    if(index + 1 < boxState.length){\n        index += 1;\n    }\n    this.setState({ index })\n\n  }\n\n  handleClick = (e) => {\n    let {index} = this.state;\n    if (this.state.winComplete[index]) return;\n    let attr = e.target.getAttribute(\"name\");\n    const upperBoxState = [...this.state.boxState];\n    const boxState = [...upperBoxState[index]];\n    const obj = { ...boxState.find((v) => v.box === attr) };\n    \n    if (obj.circle || obj.cross) {\n      return;\n    } else {\n      obj.clicked = true;\n    }\n    if (this.state.circleOrCross[index]) {\n      obj.circle = true;\n      obj.innerText = \"O\";\n    } else {\n      obj.cross = true;\n      obj.innerText = \"X\";\n    }\n    for (let i = 0; i < boxState.length; i++) {\n      if (boxState[i].box === attr) {\n        boxState[i] = { ...obj };\n        break;\n      }\n    }\n    if(upperBoxState.length - 1 < (index + 1)){\n        upperBoxState.push(boxState);\n    }\n    else{\n        upperBoxState[index + 1] = boxState;\n        while(upperBoxState.length - 1 > (index + 1)){\n            upperBoxState.pop();\n        }\n    } \n       \n    let result = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n    for (let i = 0; i < boxState.length; i++) {\n      if (boxState[i].circle) {\n        result[i] = \"circle\";\n      } else if (boxState[i].cross) {\n        result[i] = \"cross\";\n      }\n    }\n\n    let winComplete = false;\n    let playerA = false;\n    let playerB = false;\n    let draw = false;\n    let circleOrCross = this.state.circleOrCross[index];\n    let count = 0;\n\n    if (\n      result[0] === \"cross\" &&\n      result[1] === \"cross\" &&\n      result[2] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n      \n\n    }\n    if (\n      result[3] === \"cross\" &&\n      result[4] === \"cross\" &&\n      result[5] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n    }\n    if (\n      result[6] === \"cross\" &&\n      result[7] === \"cross\" &&\n      result[8] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n    }\n    if (\n      result[0] === \"cross\" &&\n      result[3] === \"cross\" &&\n      result[6] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n    }\n    if (\n      result[1] === \"cross\" &&\n      result[4] === \"cross\" &&\n      result[7] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n    }\n    if (\n      result[2] === \"cross\" &&\n      result[5] === \"cross\" &&\n      result[8] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n    }\n    if (\n      result[0] === \"cross\" &&\n      result[4] === \"cross\" &&\n      result[8] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n    }\n    if (\n      result[2] === \"cross\" &&\n      result[4] === \"cross\" &&\n      result[6] === \"cross\"\n    ) {\n      winComplete = true;\n      playerA = true;\n    }\n\n    if (\n      result[0] === \"circle\" &&\n      result[1] === \"circle\" &&\n      result[2] === \"circle\"\n    ) {\n      winComplete = true;\n      playerB = true;\n    }\n    if (\n      result[3] === \"circle\" &&\n      result[4] === \"circle\" &&\n      result[5] === \"circle\"\n    ) {\n      winComplete = true;\n      playerB = true;\n    }\n    if (\n      result[6] === \"circle\" &&\n      result[7] === \"circle\" &&\n      result[8] === \"circle\"\n    ) {\n      winComplete = true;\n      playerB = true;\n    }\n    if (\n      result[0] === \"circle\" &&\n      result[3] === \"circle\" &&\n      result[6] === \"circle\"\n    ) {\n      winComplete = true;\n      playerB = true;\n    }\n    if (\n      result[1] === \"circle\" &&\n      result[4] === \"circle\" &&\n      result[7] === \"circle\"\n    ) {\n      winComplete = true;\n      playerB = true;\n    }\n    if (\n      result[2] === \"circle\" &&\n      result[5] === \"circle\" &&\n      result[8] === \"circle\"\n    ) {\n      winComplete = true;\n      playerB = true;\n    }\n    if (\n        result[0] === \"circle\" &&\n        result[4] === \"circle\" &&\n        result[8] === \"circle\"\n      ) {\n        winComplete = true;\n        playerB = true;\n      }\n      if (\n        result[2] === \"circle\" &&\n        result[4] === \"circle\" &&\n        result[6] === \"circle\"\n      ) {\n        winComplete = true;\n        playerB = true;\n      }\n\n    if (!winComplete) {\n      for (let v of result) {\n        if (v) {\n          count++;\n        }\n      }\n    }\n    if (count === result.length && !winComplete) {\n      draw = true;\n    }\n\n    let winCompleteArr = [...this.state.winComplete];\n    let drawArr = [...this.state.draw]\n    let playerAArr = [...this.state.playerA]\n    let playerBArr = [...this.state.playerB]\n    let circleOrCrossArr = [...this.state.circleOrCross]\n    index += 1;\n\n    if(winCompleteArr.length - 1 < index){\n        winCompleteArr.push(winComplete)\n    }else{\n        winCompleteArr[index] = winComplete;\n        while(winCompleteArr.length - 1 > (index)){\n            winCompleteArr.pop();\n        }\n    }\n\n    if(drawArr.length - 1 < index){\n        drawArr.push(draw)\n    }else{\n        drawArr[index] = draw;\n        while(drawArr.length - 1 > (index)){\n            drawArr.pop();\n        }\n    }\n    \n    if(playerAArr.length - 1 < index){\n        playerAArr.push(playerA)\n    }else{\n        playerAArr[index] = playerA;\n        while(playerAArr.length - 1 > (index)){\n            playerAArr.pop();\n        }\n    }\n    \n    if(playerBArr.length - 1 < index){\n        playerBArr.push(playerB)\n    }else{\n        playerBArr[index] = playerB;\n        while(playerBArr.length - 1 > (index)){\n            playerBArr.pop();\n        }\n    }\n    \n    if(circleOrCrossArr.length - 1 > index){\n        circleOrCrossArr.push(!circleOrCross)\n    }else{\n        circleOrCrossArr[index] = !circleOrCross;\n        while(circleOrCrossArr.length - 1 < (index)){\n            circleOrCrossArr.pop();\n        }\n    }\n\n    this.setState({\n      winComplete : winCompleteArr,\n      draw: drawArr,\n      playerA : playerAArr,\n      playerB: playerBArr,\n      boxState: upperBoxState,\n      circleOrCross: circleOrCrossArr,\n      index: index,\n      prevClicked: false\n    });\n  };\n  render() {\n    const {index} = this.state; \n    const  {\n        draw,\n        playerA,\n        playerB,\n        circleOrCross\n    } = this.state\n    return (\n      <div className=\"wrapper\">\n        <h1>Tic-Tac-Toe</h1>\n        <div className=\"players\">\n          {!draw[index] ? (\n            !playerA[index] && !playerB[index] ? (\n              <>\n                <p>PlayerA(X)</p>\n                {circleOrCross[index] ? (<p>B</p>) : (<p>A</p>)}\n                <p>PlayerB(O)</p>\n              </>\n            ) : playerA[index] && !playerB[index] ? (\n              <p>PlayerA wins</p>\n            ) : (\n              <p>PlayerB wins</p>\n            )\n          ) : (\n            <p>Draw</p>\n          )}\n        </div>\n        <Utility prevClicked={this.state.prevClicked} handleReset={this.handleReset} handlePrev={this.handlePrev} handleNext={this.handleNext} />\n        <div className=\"tictactoe\">\n          {this.state.boxState[index].map((e) => {\n            return (\n              <div\n                key={e.box}\n                name={e.box}\n                onClick={this.handleClick.bind(this)}\n                className={`box ${e.box}`}\n              >\n                {e.innerText}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TicTacToe;\n","import React, { Component } from 'react'\nimport { Fragment } from 'react'\nimport TicTacToe from './TicTacToe'\n\nexport class WrapperTicTacToe extends Component {\n    render() {\n        return (\n            <Fragment>\n               <TicTacToe /> \n            </Fragment>\n        )\n    }\n}\n\nexport default WrapperTicTacToe\n","import './App.css';\nimport WrapperTicTacToe from './components/WrapperTicTacToe';\n\nfunction App() {\n  return (\n    <WrapperTicTacToe />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}